/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Model.KhachHang;
import Service.KhachHangService;
import com.toedter.calendar.JDateChooser;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author admin
 */
public class JPanelKhachHang extends javax.swing.JPanel {

    KhachHangService khS = new KhachHangService();

    public JPanelKhachHang() {
        initComponents();
        loadTBV(khS.getListDB());
        btn_sua.setEnabled(false);
        btn_xoa.setEnabled(false);
        disableTextField((JTextComponent) txt_ngaysinh.getDateEditor().getUiComponent());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txt_ma = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txt_ten = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        rdo_nam = new javax.swing.JRadioButton();
        rdo_nu = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        txt_sdt = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txt_timkiem = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_khachhang = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        btn_them = new javax.swing.JButton();
        btn_sua = new javax.swing.JButton();
        btn_xoa = new javax.swing.JButton();
        btn_lammoi = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_diachi = new javax.swing.JTextArea();
        jLabel32 = new javax.swing.JLabel();
        rdo_khong = new javax.swing.JRadioButton();
        rdo_co = new javax.swing.JRadioButton();
        txt_ngaysinh = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1070, 680));
        setPreferredSize(new java.awt.Dimension(1070, 680));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setText("Mã khách hàng:");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 19, -1, -1));

        txt_ma.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_ma.setBorder(null);
        txt_ma.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jPanel3.add(txt_ma, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 174, -1));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setText("Tên khách hàng");
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        txt_ten.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_ten.setBorder(null);
        jPanel3.add(txt_ten, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 174, -1));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel26.setText("Ngày sinh");
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel27.setText("Trạng Thái");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, -1, -1));

        rdo_nam.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rdo_nam);
        rdo_nam.setSelected(true);
        rdo_nam.setText("Nam");
        jPanel3.add(rdo_nam, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 67, -1));

        rdo_nu.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rdo_nu);
        rdo_nu.setText("Nữ");
        jPanel3.add(rdo_nu, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 67, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Số điện thoại");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, -1, -1));

        txt_sdt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_sdt.setBorder(null);
        jPanel3.add(txt_sdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, 174, -1));

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel28.setText("Địa chỉ");
        jPanel3.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, -1, -1));

        txt_timkiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_timkiem.setBorder(null);
        txt_timkiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_timkiemKeyPressed(evt);
            }
        });
        jPanel3.add(txt_timkiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 40, 174, -1));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel29.setText("Tìm kiếm");
        jPanel3.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(739, 19, -1, -1));

        tbl_khachhang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Ma", "Ten", "NgaySinh", "GioiTinh", "Sdt", "DiaChi", "Ngày Tạo", "Ngày Sửa", "TrangThai"
            }
        ));
        tbl_khachhang.setFocusable(false);
        tbl_khachhang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_khachhangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_khachhang);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 1030, 207));

        jSeparator1.setForeground(new java.awt.Color(147, 214, 255));
        jPanel3.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 174, 12));

        jSeparator2.setForeground(new java.awt.Color(147, 214, 255));
        jPanel3.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 174, 12));

        jSeparator4.setForeground(new java.awt.Color(147, 214, 255));
        jPanel3.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 60, 174, 10));

        jSeparator6.setForeground(new java.awt.Color(147, 214, 255));
        jPanel3.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 60, 174, 10));

        btn_them.setBackground(new java.awt.Color(147, 214, 255));
        btn_them.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_them.setForeground(new java.awt.Color(255, 255, 255));
        btn_them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add20px.png"))); // NOI18N
        btn_them.setText("Thêm");
        btn_them.setBorderPainted(false);
        btn_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themActionPerformed(evt);
            }
        });
        jPanel3.add(btn_them, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 540, 90, 33));

        btn_sua.setBackground(new java.awt.Color(147, 214, 255));
        btn_sua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_sua.setForeground(new java.awt.Color(255, 255, 255));
        btn_sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/edit20px.png"))); // NOI18N
        btn_sua.setText("Sửa");
        btn_sua.setBorderPainted(false);
        btn_sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaActionPerformed(evt);
            }
        });
        jPanel3.add(btn_sua, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 540, 87, 33));

        btn_xoa.setBackground(new java.awt.Color(147, 214, 255));
        btn_xoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_xoa.setForeground(new java.awt.Color(255, 255, 255));
        btn_xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete20px.png"))); // NOI18N
        btn_xoa.setText("Xóa");
        btn_xoa.setBorderPainted(false);
        btn_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaActionPerformed(evt);
            }
        });
        jPanel3.add(btn_xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 540, 87, 33));

        btn_lammoi.setBackground(new java.awt.Color(147, 214, 255));
        btn_lammoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_lammoi.setForeground(new java.awt.Color(255, 255, 255));
        btn_lammoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/clear20px.png"))); // NOI18N
        btn_lammoi.setText("Mới");
        btn_lammoi.setBorderPainted(false);
        btn_lammoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lammoiActionPerformed(evt);
            }
        });
        jPanel3.add(btn_lammoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 540, 87, 33));

        txt_diachi.setColumns(20);
        txt_diachi.setRows(5);
        jScrollPane2.setViewportView(txt_diachi);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, -1, 70));

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel32.setText("Giới Tính");
        jPanel3.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        buttonGroup2.add(rdo_khong);
        rdo_khong.setText("Không");
        jPanel3.add(rdo_khong, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, -1, -1));

        buttonGroup2.add(rdo_co);
        rdo_co.setSelected(true);
        rdo_co.setText("Có");
        jPanel3.add(rdo_co, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, -1, -1));

        txt_ngaysinh.setDateFormatString("yyyy-MM-dd");
        jPanel3.add(txt_ngaysinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 180, -1));

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, -1, 618));

        jPanel1.setBackground(new java.awt.Color(147, 214, 255));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("          Khách Hàng");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 1070, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void btn_themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themActionPerformed
        if (checkValidateInsert()) {
            addKH();
            clearForm();
        }
    }//GEN-LAST:event_btn_themActionPerformed

    private void btn_suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaActionPerformed
        if (checkValidateUpdate()) {
            updateKH();
            btn_them.setEnabled(true);
            btn_sua.setEnabled(false);
            btn_xoa.setEnabled(false);
        }
    }//GEN-LAST:event_btn_suaActionPerformed

    private void btn_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaActionPerformed
        if (txt_ma.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã để xóa");
            return;
        }
        int cf = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?", "Xóa", JOptionPane.YES_NO_OPTION);
        if (cf == JOptionPane.YES_OPTION) {
            deleteKH();
            btn_them.setEnabled(true);
            btn_sua.setEnabled(false);
            btn_xoa.setEnabled(false);
            clearForm();
        }
    }//GEN-LAST:event_btn_xoaActionPerformed

    private void btn_lammoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lammoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btn_lammoiActionPerformed

    private void tbl_khachhangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_khachhangMouseClicked
        btn_them.setEnabled(false);
        btn_sua.setEnabled(true);
        btn_xoa.setEnabled(true);
        txt_ma.setEditable(false);
        int a = tbl_khachhang.getSelectedRow();

        txt_ma.setText(tbl_khachhang.getValueAt(a, 1).toString().trim());
        txt_ten.setText(tbl_khachhang.getValueAt(a, 2).toString().trim());
        try {
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(tbl_khachhang.getValueAt(a, 3).toString().trim());
            txt_ngaysinh.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(JPanelNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
        txt_sdt.setText(tbl_khachhang.getValueAt(a, 5).toString().trim());
        txt_diachi.setText(tbl_khachhang.getValueAt(a, 6).toString().trim());
        if (tbl_khachhang.getValueAt(a, 4).toString().equalsIgnoreCase("Nam")) {
            rdo_nam.setSelected(true);
        } else {
            rdo_nu.setSelected(true);
        }

        if (tbl_khachhang.getValueAt(a, 9).toString().equalsIgnoreCase("Còn hoạt động")) {
            rdo_co.setSelected(true);
        } else {
            rdo_khong.setSelected(true);
        }
    }//GEN-LAST:event_tbl_khachhangMouseClicked

    private void txt_timkiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_timkiemKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txt_timkiem.getText().isEmpty()) {
                loadTBV(khS.getListDB());
            }
            loadTBV(khS.getListKHByName(txt_timkiem.getText().trim()));
        }
    }//GEN-LAST:event_txt_timkiemKeyPressed

    private static void disableTextField(JTextComponent textComponent) {
        textComponent.setEditable(false);
        textComponent.setFocusable(false);
        textComponent.setBackground(null);
        textComponent.setBorder(null);
    }

    private void loadTBV(List<KhachHang> list) {
        DefaultTableModel mol = (DefaultTableModel) tbl_khachhang.getModel();
        mol.setRowCount(0);
        for (KhachHang kh : list) {
            String tt = "";
            if (kh.getTrangThai() == 1) {
                tt = "Còn hoạt động";
            } else if (kh.getTrangThai() == 0) {
                tt = "Không hoạt động";
            }
            if (kh.getTrangThai() != 2) {
                mol.addRow(new Object[]{kh.getId(), kh.getMa(), kh.getTen(), kh.getNgaySinh(), kh.getGioiTinh(),
                    kh.getSdt(), kh.getDiaChi(), kh.getNgayTao(), kh.getNgayNhap(), tt});
            }
        }
    }

    private void addKH() {
        LocalDate date = LocalDate.now();
        JDateChooser ngaySinh = new JDateChooser();
        String ma = txt_ma.getText().trim();
        String ten = txt_ten.getText().trim();
        ngaySinh.setDate(txt_ngaysinh.getDate());
        Date selectedDate = ngaySinh.getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String sdt = txt_sdt.getText().trim();
        String diaChi = txt_diachi.getText().trim();
        String gt;
        if (rdo_nam.isSelected()) {
            gt = "Nam";
        } else {
            gt = "Nữ";
        }
        int tt;
        if (rdo_nam.isSelected()) {
            tt = 1;
        } else {
            tt = 0;
        }

        KhachHang khachHang = new KhachHang(ma, ten, dateFormat.format(selectedDate), gt, sdt, diaChi, date.format(DateTimeFormatter.ISO_DATE), date.format(DateTimeFormatter.ISO_DATE), tt);

        int cf = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm không?", "Thêm", JOptionPane.YES_NO_OPTION);

        if (cf == JOptionPane.YES_OPTION) {
            boolean result = khS.create(khachHang);
            if (result) {
                JOptionPane.showMessageDialog(this, "Thêm thành công");
                loadTBV(khS.getListDB());
            } else {
                JOptionPane.showMessageDialog(this, "Thêm thất bại");
            }
        }
    }

    private void updateKH() {
        LocalDate date = LocalDate.now();
        JDateChooser ngaySinh = new JDateChooser();
        String ma = txt_ma.getText().trim();
        String ten = txt_ten.getText().trim();
        ngaySinh.setDate(txt_ngaysinh.getDate());
        Date selectedDate = ngaySinh.getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String sdt = txt_sdt.getText().trim();
        String diaChi = txt_diachi.getText().trim();
        String gt;
        if (rdo_nam.isSelected()) {
            gt = "Nam";
        } else {
            gt = "Nữ";
        }
        int tt;
        if (rdo_nam.isSelected()) {
            tt = 1;
        } else {
            tt = 0;
        }
        KhachHang khachHang = new KhachHang(ma, ten, dateFormat.format(selectedDate), gt, sdt, diaChi, date.format(DateTimeFormatter.ISO_DATE), tt);

        int cf = JOptionPane.showConfirmDialog(this, "Bạn có muốn sửa không?", "Sửa", JOptionPane.YES_NO_OPTION);

        if (cf == JOptionPane.YES_OPTION) {
            boolean result = khS.update(khachHang);
            if (result) {
                JOptionPane.showMessageDialog(this, "Sửa thành công");
                loadTBV(khS.getListDB());
            } else {
                JOptionPane.showMessageDialog(this, "Sửa thất bại");
            }
        }
    }

    private void deleteKH() {
        String ma = txt_ma.getText().trim();
        KhachHang kh = new KhachHang();
        kh.setMa(ma);
        boolean result = khS.delete(kh);
        if (result == true) {
            JOptionPane.showMessageDialog(this, "Xóa thành công");
            loadTBV(khS.getListDB());
        } else {
            JOptionPane.showMessageDialog(this, "Xóa thất bại");
        }
    }
    
    public void clearForm() {
        btn_them.setEnabled(true);
        btn_sua.setEnabled(false);
        btn_xoa.setEnabled(false);
        txt_ma.setEditable(true);
        txt_ma.setText("");
        txt_ten.setText("");
        txt_ngaysinh.setDate(null);
        txt_sdt.setText("");
        txt_diachi.setText("");
        rdo_nam.setSelected(true);
        rdo_co.setSelected(true);
    }

    private boolean checkValidateInsert() {
        Pattern p = Pattern.compile("[^a-z0-9\\\\s]", Pattern.CASE_INSENSITIVE);
        Pattern p1 = Pattern.compile(".*[!@#$%^&*(),.?\\\":{}|<>].*", Pattern.CASE_INSENSITIVE);
        Matcher ma = p.matcher(txt_ma.getText());
        Matcher ten = p1.matcher(txt_ten.getText());

        JDateChooser ngayTao = new JDateChooser();
        ngayTao.setDate(txt_ngaysinh.getDate());
        Date selectedDate = ngayTao.getDate();

        if (txt_ma.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã không được trống");
            txt_ma.requestFocus();
            return false;
        } else if (ma.find()) {
            JOptionPane.showMessageDialog(this, "Mã không được chứa ký tự đặc biệt");
            txt_ma.requestFocus();
            return false;
        }

        if (checkMa(txt_ma.getText().trim()) == 1) {
            JOptionPane.showMessageDialog(this, "Mã khách hàng đã tồn tại");
            txt_ma.requestFocus();
            return false;
        }

        if (txt_ten.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên khách hàng không được trống");
            txt_ten.requestFocus();
            return false;
        } else if (ten.find()) {
            JOptionPane.showMessageDialog(this, "Tên không được chứa ký tự đặc biệt");
            txt_ten.requestFocus();
            return false;
        }

        if (selectedDate == null) {
            JOptionPane.showMessageDialog(this, "Ngày sinh không được trống");
            txt_ngaysinh.requestFocus();
            return false;
        }

        if (txt_sdt.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không được trống");
            txt_sdt.requestFocus();
            return false;
        } else if (!txt_sdt.getText().trim().matches("0[0-9]{9}")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không đúng định dạng");
            txt_sdt.requestFocus();
            return false;
        }

        if (txt_diachi.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Địa chỉ không được trống");
            txt_diachi.requestFocus();
            return false;
        }
        return true;
    }

    private boolean checkValidateUpdate() {
        Pattern p1 = Pattern.compile(".*[!@#$%^&*(),.?\\\":{}|<>].*", Pattern.CASE_INSENSITIVE);
        Matcher ten = p1.matcher(txt_ten.getText());

        JDateChooser ngayTao = new JDateChooser();
        ngayTao.setDate(txt_ngaysinh.getDate());
        Date selectedDate = ngayTao.getDate();

        if (txt_ten.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên khách hàng không được trống");
            txt_ten.requestFocus();
            return false;
        } else if (ten.find()) {
            JOptionPane.showMessageDialog(this, "Tên không được chứa ký tự đặc biệt");
            txt_ten.requestFocus();
            return false;
        }

        if (selectedDate == null) {
            JOptionPane.showMessageDialog(this, "Ngày sinh không được trống");
            txt_ngaysinh.requestFocus();
            return false;
        }

        if (txt_sdt.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không được trống");
            txt_sdt.requestFocus();
            return false;
        } else if (!txt_sdt.getText().trim().matches("0[0-9]{9}")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không đúng định dạng");
            txt_sdt.requestFocus();
            return false;
        }

        if (txt_diachi.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Địa chỉ không được trống");
            txt_diachi.requestFocus();
            return false;
        }
        return true;
    }

    private int checkMa(String ma) {
        for (KhachHang kh : khS.getListDB()) {
            if (kh.getMa().trim().equalsIgnoreCase(ma)) {
                return 1;
            }
        }
        return 2;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_lammoi;
    private javax.swing.JButton btn_sua;
    private javax.swing.JButton btn_them;
    private javax.swing.JButton btn_xoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JRadioButton rdo_co;
    private javax.swing.JRadioButton rdo_khong;
    private javax.swing.JRadioButton rdo_nam;
    private javax.swing.JRadioButton rdo_nu;
    private javax.swing.JTable tbl_khachhang;
    private javax.swing.JTextArea txt_diachi;
    private javax.swing.JTextField txt_ma;
    private com.toedter.calendar.JDateChooser txt_ngaysinh;
    private javax.swing.JTextField txt_sdt;
    private javax.swing.JTextField txt_ten;
    private javax.swing.JTextField txt_timkiem;
    // End of variables declaration//GEN-END:variables
}
