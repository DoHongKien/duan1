package View;

import Service.ChiTietHoaDonService;
import ViewModel.ChiTietHoaDonModel;
import ViewModel.HoaDonModel;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import com.toedter.calendar.JDateChooser;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.text.JTextComponent;

/**
 *
 * @author admin
 */
public class JPanelHoaDon extends javax.swing.JPanel {

    DefaultTableModel defaultTableModelHoaDon;
    DefaultTableModel defaultTableModelSanPham;
    ChiTietHoaDonService chiTietHoaDonService = new ChiTietHoaDonService();

    public JPanelHoaDon() {
        initComponents();
        String[] tt = {"Tất cả", "Đã thanh toán", "Chưa thanh toán", "Hóa đơn chờ"};
        String[] date = {"Ngày Tạo", "Ngày Thanh Toán"};
        for (String tt1 : tt) {
            cbo_trangthai.addItem(tt1);
        }
        for (String date1 : date) {
            cbo_date.addItem(date1);
        }
        fillHoaDon(chiTietHoaDonService.getListHoaDon());
        disableTextField((JTextComponent) txt_startdate.getDateEditor().getUiComponent());
        disableTextField((JTextComponent) txt_enddate.getDateEditor().getUiComponent());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_timkiem = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbo_trangthai = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_hoadon = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_sanpham = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        cbo_date = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btn_inhoadon = new javax.swing.JButton();
        txt_startdate = new com.toedter.calendar.JDateChooser();
        txt_enddate = new com.toedter.calendar.JDateChooser();
        btn_loc = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1070, 680));
        setPreferredSize(new java.awt.Dimension(1070, 680));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(147, 214, 255));

        jLabel1.setBackground(new java.awt.Color(147, 214, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("          Hóa Đơn");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1070, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Tìm Kiếm");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        txt_timkiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_timkiemKeyPressed(evt);
            }
        });
        jPanel2.add(txt_timkiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 162, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Trạng Thái");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, -1, -1));

        cbo_trangthai.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbo_trangthaiItemStateChanged(evt);
            }
        });
        jPanel2.add(cbo_trangthai, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 158, -1));

        tbl_hoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HĐ", "Tên NV", "Tên KH", "Sđt", "Ngày tạo", "Ngày thanh toán", "Tổng tiền", "Trạng Thái"
            }
        ));
        tbl_hoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_hoadonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_hoadon);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 1025, 220));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Sản Phẩm");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        tbl_sanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên sản phẩm", "Giá bán (VND)", "Khuyến mãi (VND)", "Số lượng", "Đơn giá (VND)"
            }
        ));
        jScrollPane2.setViewportView(tbl_sanpham);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 1025, 157));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Ngày");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, -1, -1));

        cbo_date.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbo_dateItemStateChanged(evt);
            }
        });
        jPanel2.add(cbo_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 127, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Từ");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 40, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Đến");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 40, -1, -1));

        btn_inhoadon.setBackground(new java.awt.Color(147, 214, 255));
        btn_inhoadon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_inhoadon.setForeground(new java.awt.Color(255, 255, 255));
        btn_inhoadon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/print.png"))); // NOI18N
        btn_inhoadon.setText("In");
        btn_inhoadon.setBorderPainted(false);
        btn_inhoadon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inhoadonActionPerformed(evt);
            }
        });
        jPanel2.add(btn_inhoadon, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 560, 77, 33));

        txt_startdate.setDateFormatString("yyyy-MM-dd");
        jPanel2.add(txt_startdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 70, 130, -1));

        txt_enddate.setDateFormatString("yyyy-MM-dd");
        jPanel2.add(txt_enddate, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 70, 120, -1));

        btn_loc.setBackground(new java.awt.Color(147, 214, 255));
        btn_loc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_loc.setForeground(new java.awt.Color(255, 255, 255));
        btn_loc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/filter.png"))); // NOI18N
        btn_loc.setText("Lọc");
        btn_loc.setBorderPainted(false);
        btn_loc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_locActionPerformed(evt);
            }
        });
        jPanel2.add(btn_loc, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 60, 90, 33));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 55, 1070, 620));
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_hoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_hoadonMouseClicked
        try {
            int index = tbl_hoadon.getSelectedRow();
            fillSanPham(chiTietHoaDonService.getCTHDByMa(tbl_hoadon.getValueAt(index, 0).toString()));
        } catch (Exception e) {
            e.getMessage();
        }
    }//GEN-LAST:event_tbl_hoadonMouseClicked

    private void btn_inhoadonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inhoadonActionPerformed
        int index = tbl_hoadon.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn để in");
            return;
        }

        String path = "";
        JFileChooser chooser = new JFileChooser("D:\\");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = chooser.showSaveDialog(this);

        if (x == JFileChooser.APPROVE_OPTION) {
            path = chooser.getSelectedFile().getPath();
        }

        Document doc = new Document();

        try {
            PdfWriter.getInstance(doc, new FileOutputStream(path + ".pdf"));
            doc.open();

            String ma = tbl_hoadon.getValueAt(index, 0).toString();
            String tenKH = tbl_hoadon.getValueAt(index, 2).toString();
            String ngayTao = tbl_hoadon.getValueAt(index, 4).toString();
            String ngayThanhToan = tbl_hoadon.getValueAt(index, 5).toString();

            PdfPTable tbl3 = new PdfPTable(3);
            PdfPTable tblTenCuaHang = new PdfPTable(1);
            PdfPTable tblLoiCamOn = new PdfPTable(1);
            PdfPTable tblDanhSach = new PdfPTable(2);
            PdfPTable tblTongTien = new PdfPTable(2);

            for (int i = 0; i < tbl_sanpham.getRowCount(); i++) {
                String tenSP = tbl_sanpham.getValueAt(i, 0).toString();
                String soLuong = tbl_sanpham.getValueAt(i, 3).toString();
                String donGia = tbl_sanpham.getValueAt(i, 4).toString();
                int DONGIA = (int) (Integer.parseInt(tbl_sanpham.getValueAt(i, 3).toString()) * Double.parseDouble(tbl_sanpham.getValueAt(i, 1).toString()));
                PdfPCell cellTenSP = new PdfPCell(new Phrase(tenSP));
                PdfPCell cellDonGia = new PdfPCell(new Phrase(DONGIA + " VND"));
                PdfPCell cellSoLuong = new PdfPCell(new Phrase("SL: " + soLuong));
                cellTenSP.setBorderColor(Color.WHITE);
                cellDonGia.setBorderColor(Color.WHITE);
                cellSoLuong.setBorderColor(Color.WHITE);
                cellTenSP.setPaddingLeft(30);
                cellTenSP.setPaddingBottom(10);
                cellDonGia.setPaddingLeft(72);
                cellDonGia.setPaddingBottom(10);
                cellSoLuong.setPaddingLeft(10);
                cellSoLuong.setPaddingBottom(10);
                tbl3.addCell(cellTenSP);
                tbl3.addCell(cellDonGia);
                tbl3.addCell(cellSoLuong);
            }

            PdfPCell cellTitle = new PdfPCell(new Phrase("SEVENT STORE"));
            PdfPCell cellEnd = new PdfPCell(new Phrase("CAM ON QUY KHACH"));
            PdfPCell cellLater = new PdfPCell(new Phrase("HEN GAP LAI!"));
            cellTitle.setBorderColor(Color.WHITE);
            cellEnd.setBorderColor(Color.WHITE);
            cellLater.setBorderColor(Color.WHITE);
            cellTitle.setPaddingBottom(50);
            cellTitle.setPaddingLeft(130);
            tblTenCuaHang.addCell(cellTitle);
            cellEnd.setPaddingTop(50);
            cellEnd.setPaddingLeft(100);
            cellLater.setPaddingTop(10);
            cellLater.setPaddingLeft(120);

            PdfPCell cellMa = new PdfPCell(new Phrase("Ma Hoa Don"));
            PdfPCell cellMa1 = new PdfPCell(new Phrase(ma));
            PdfPCell cellKH = new PdfPCell(new Phrase("Khach Hang"));
            PdfPCell cellKH1 = new PdfPCell(new Phrase(tenKH));
            PdfPCell cellNgayTao = new PdfPCell(new Phrase("Ngay Tao"));
            PdfPCell cellNgayTao1 = new PdfPCell(new Phrase(ngayTao));
            PdfPCell cellNgayThanhToan = new PdfPCell(new Phrase("Ngay Thanh Toan"));
            PdfPCell cellNgayThanhToan1 = new PdfPCell(new Phrase(ngayThanhToan));
            PdfPCell cellVachKe = new PdfPCell(new Phrase("--------------------------------------------"));
            PdfPCell cellVachKe1 = new PdfPCell(new Phrase("--------------------------------------------"));
            PdfPCell cellTongTien = new PdfPCell(new Phrase("Tong Tien"));
            PdfPCell cellKhuyenMai = new PdfPCell(new Phrase("Khuyen Mai"));

            cellMa.setBorderColor(Color.WHITE);
            cellMa1.setBorderColor(Color.WHITE);
            cellMa.setPaddingBottom(10);
            cellMa.setPaddingLeft(30);
            cellKH.setBorderColor(Color.WHITE);
            cellKH1.setBorderColor(Color.WHITE);
            cellKH.setPaddingBottom(10);
            cellKH.setPaddingLeft(30);
            cellNgayTao.setBorderColor(Color.WHITE);
            cellNgayTao1.setBorderColor(Color.WHITE);
            cellNgayTao.setPaddingBottom(10);
            cellNgayTao.setPaddingLeft(30);
            cellNgayThanhToan.setBorderColor(Color.WHITE);
            cellNgayThanhToan1.setBorderColor(Color.WHITE);
            cellNgayThanhToan.setPaddingBottom(10);
            cellNgayThanhToan.setPaddingLeft(30);
            cellVachKe.setBorderColor(Color.WHITE);
            cellVachKe1.setBorderColor(Color.WHITE);
            cellVachKe.setPaddingBottom(10);
            cellVachKe.setPaddingLeft(30);

            cellKhuyenMai.setBorderColor(Color.WHITE);
            cellKhuyenMai.setPaddingBottom(10);
            cellKhuyenMai.setPaddingLeft(30);

            tblDanhSach.addCell(cellMa);
            tblDanhSach.addCell(cellMa1);
            tblDanhSach.addCell(cellKH);
            tblDanhSach.addCell(cellKH1);
            tblDanhSach.addCell(cellNgayTao);
            tblDanhSach.addCell(cellNgayTao1);
            tblDanhSach.addCell(cellNgayThanhToan);
            tblDanhSach.addCell(cellNgayThanhToan1);
            tblDanhSach.addCell(cellVachKe);
            tblDanhSach.addCell(cellVachKe1);
            tblTongTien.addCell(cellKhuyenMai);
            String khuyenMai;
            PdfPCell cellTongTien1 = null;
            for (int i = 0; i < 1; i++) {
                khuyenMai = tbl_sanpham.getValueAt(i, 2).toString();
                PdfPCell cellKhuyenMai1 = new PdfPCell(new Phrase(khuyenMai));
                cellKhuyenMai1.setBorderColor(Color.WHITE);
                tblTongTien.addCell(cellKhuyenMai1);
                cellTongTien1 = new PdfPCell(new Phrase(tbl_sanpham.getValueAt(i, 4).toString()));
            }

            cellTongTien.setBorderColor(Color.WHITE);
            cellTongTien1.setBorderColor(Color.WHITE);
            cellTongTien.setPaddingBottom(10);
            cellTongTien.setPaddingLeft(30);

            tblTongTien.addCell(cellTongTien);
            tblTongTien.addCell(cellTongTien1);
            tblLoiCamOn.addCell(cellEnd);
            tblLoiCamOn.addCell(cellLater);

            doc.add(tblTenCuaHang);
            doc.add(tblDanhSach);
            doc.add(tbl3);
            doc.add(tblTongTien);
            doc.add(tblLoiCamOn);

        } catch (FileNotFoundException | DocumentException ex) {
            ex.getMessage();
        }
        doc.close();
        JOptionPane.showMessageDialog(this, "In hóa đơn thành công");
    }//GEN-LAST:event_btn_inhoadonActionPerformed

    private void cbo_trangthaiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbo_trangthaiItemStateChanged
        int tt = cbo_trangthai.getSelectedIndex();
        switch (tt) {
            case 0 ->
                fillHoaDon(chiTietHoaDonService.getListHoaDon());
            case 1 ->
                fillHoaDon(chiTietHoaDonService.filterHoaDonByNameTT(1));
            case 2 ->
                fillHoaDon(chiTietHoaDonService.filterHoaDonByNameTT(0));
            case 3 ->
                fillHoaDon(chiTietHoaDonService.filterHoaDonByNameTT(2));
        }
    }//GEN-LAST:event_cbo_trangthaiItemStateChanged

    private void cbo_dateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbo_dateItemStateChanged
//        if (!txt_startdate.getText().isEmpty() && !txt_enddate.getText().isEmpty()) {

//        }
    }//GEN-LAST:event_cbo_dateItemStateChanged

    private void txt_timkiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_timkiemKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txt_timkiem.getText().isEmpty()) {
                fillHoaDon(chiTietHoaDonService.getListHoaDon());
            } else {
                fillHoaDon(chiTietHoaDonService.searchHoaDonByNameNV(txt_timkiem.getText()));
            }
        }
    }//GEN-LAST:event_txt_timkiemKeyPressed

    private void btn_locActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_locActionPerformed
        if (checkDate()) {
            String ngay = (String) cbo_date.getSelectedItem();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date start = txt_startdate.getDate();
            Date end = txt_enddate.getDate();

            String ngay1 = ngay.equalsIgnoreCase("Ngày Tạo") ? "ngay_tao" : "ngay_thanh_toan";
            fillHoaDon(chiTietHoaDonService.filterHoaDonByDate(ngay1, sdf.format(start), sdf.format(end)));
        }
    }//GEN-LAST:event_btn_locActionPerformed

    private static void disableTextField(JTextComponent textComponent) {
        textComponent.setEditable(false);
        textComponent.setFocusable(false);
        textComponent.setBackground(null);
        textComponent.setBorder(null);
    }

    private void fillHoaDon(List<HoaDonModel> list) {
        defaultTableModelHoaDon = (DefaultTableModel) tbl_hoadon.getModel();
        defaultTableModelHoaDon.setRowCount(0);
        for (HoaDonModel ql : list) {
            String tt = "";
            switch (ql.getTrangThai()) {
                case 0 ->
                    tt = "Chưa thanh toán";
                case 1 ->
                    tt = "Đã thanh toán";
                case 2 ->
                    tt = "Hóa đơn chờ";
            }
            defaultTableModelHoaDon.addRow(new Object[]{ql.getMaHD(), ql.getTenNhanVien(), ql.getTenKhachHang(), ql.getSdt(), ql.getNgayTao(), ql.getNgayThanhToan(), ql.getTongTien(), tt});
        }
    }

    private void fillSanPham(List<ChiTietHoaDonModel> list) {
        defaultTableModelSanPham = (DefaultTableModel) tbl_sanpham.getModel();
        defaultTableModelSanPham.setRowCount(0);
        for (ChiTietHoaDonModel ql : list) {
            defaultTableModelSanPham.addRow(new Object[]{ql.getTenSanPham(), ql.getGiaBan(), ql.getGiaTri(), ql.getSoLuong(), ql.getDonGia()});
        }
    }

    private boolean checkDate() {
        JDateChooser startDate = new JDateChooser();
        startDate.setDate(txt_startdate.getDate());
        Date selectedDate = startDate.getDate();

        JDateChooser endDate = new JDateChooser();
        endDate.setDate(txt_enddate.getDate());
        Date selectedDate1 = endDate.getDate();

        if (selectedDate == null) {
            JOptionPane.showMessageDialog(this, "Ngày bắt đầu lọc không được trống");
            txt_startdate.requestFocus();
            return false;
        }

        if (selectedDate1 == null) {
            JOptionPane.showMessageDialog(this, "Ngày kết thúc lọc không được trống");
            txt_startdate.requestFocus();
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_inhoadon;
    private javax.swing.JButton btn_loc;
    private javax.swing.JComboBox<String> cbo_date;
    private javax.swing.JComboBox<String> cbo_trangthai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbl_hoadon;
    private javax.swing.JTable tbl_sanpham;
    private com.toedter.calendar.JDateChooser txt_enddate;
    private com.toedter.calendar.JDateChooser txt_startdate;
    private javax.swing.JTextField txt_timkiem;
    // End of variables declaration//GEN-END:variables
}
